{"version":3,"sources":["../src/app.js"],"names":["Sentry","App","server","init","sentryConfig","middlewares","routes","exceptionHandler","use","Handlers","errorHandler","express","json","static","path","resolve","__dirname","err","req","res","next","process","env","NODE_ENV","Youch","toJSON","errors","status","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;IAAYA,M;;AACZ;;AACA;;;;AACA;;;;AACA;;;;;;IAEMC,G;AACJ,iBAAc;AAAA;;AACZ,SAAKC,MAAL,GAAc,wBAAd;;AAEAF,WAAOG,IAAP,CAAYC,gBAAZ;AACA,SAAKC,WAAL;AACA,SAAKC,MAAL;AACA,SAAKC,gBAAL;AACD;;;;kCAEa;AACZ,WAAKL,MAAL,CAAYM,GAAZ,CAAgBR,OAAOS,QAAP,CAAgBC,YAAhB,EAAhB;AACA,WAAKR,MAAL,CAAYM,GAAZ,CAAgBG,kBAAQC,IAAR,EAAhB;AACA,WAAKV,MAAL,CAAYM,GAAZ,CACE,QADF,EAEEG,kBAAQE,MAAR,CAAeC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,IAAxB,EAA8B,KAA9B,EAAqC,SAArC,CAAf,CAFF;AAID;;;6BAEQ;AACP,WAAKd,MAAL,CAAYM,GAAZ,CAAgBF,gBAAhB;AACA,WAAKJ,MAAL,CAAYM,GAAZ,CAAgBR,OAAOS,QAAP,CAAgBC,YAAhB,EAAhB;AACD;;;uCAEkB;AAAA;;AACjB,WAAKR,MAAL,CAAYM,GAAZ;AAAA,4FAAgB,iBAAOS,GAAP,EAAYC,GAAZ,EAAiBC,GAAjB,EAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACVC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aADf;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAES,IAAIC,eAAJ,CAAUP,GAAV,EAAeC,GAAf,EAAoBO,MAApB,EAFT;;AAAA;AAENC,wBAFM;AAAA,mDAGLP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqBc,MAArB,CAHK;;AAAA;AAAA,mDAKPP,IAAIQ,MAAJ,CAAW,GAAX,EAAgBf,IAAhB,CAAqB,EAAEgB,OAAO,uBAAT,EAArB,CALO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAhB;;AAAA;AAAA;AAAA;AAAA;AAOD;;;;;kBAGY,IAAI3B,GAAJ,GAAUC,M","file":"app.js","sourcesContent":["import 'dotenv/config';\n\nimport express from 'express';\nimport path from 'path';\nimport Youch from 'youch';\nimport * as Sentry from '@sentry/node';\nimport 'express-async-errors';\nimport routes from './routes';\nimport sentryConfig from './config/sentry';\nimport './database';\n\nclass App {\n  constructor() {\n    this.server = express();\n\n    Sentry.init(sentryConfig);\n    this.middlewares();\n    this.routes();\n    this.exceptionHandler();\n  }\n\n  middlewares() {\n    this.server.use(Sentry.Handlers.errorHandler());\n    this.server.use(express.json());\n    this.server.use(\n      '/files',\n      express.static(path.resolve(__dirname, '..', 'tmp', 'uploads'))\n    );\n  }\n\n  routes() {\n    this.server.use(routes);\n    this.server.use(Sentry.Handlers.errorHandler());\n  }\n\n  exceptionHandler() {\n    this.server.use(async (err, req, res, next) => {\n      if (process.env.NODE_ENV === 'development') {\n        const errors = await new Youch(err, req).toJSON();\n        return res.status(500).json(errors);\n      }\n      return res.status(500).json({ error: 'Internal server error' });\n    });\n  }\n}\n\nexport default new App().server;\n"]}