{"version":3,"sources":["../../src/config/multer.js"],"names":["storage","multer","diskStorage","destination","__dirname","filename","req","file","cb","crypto","randomBytes","err","res","toString","originalname"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;kBAEe;AACbA,WAASC,iBAAOC,WAAP,CAAmB;AAC1BC,iBAAa,mBAAQC,SAAR,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,KAA/B,EAAsC,SAAtC,CADa;AAE1BC,cAAU,kBAACC,GAAD,EAAMC,IAAN,EAAYC,EAAZ,EAAmB;AAC3BC,uBAAOC,WAAP,CAAmB,EAAnB,EAAuB,UAACC,GAAD,EAAMC,GAAN,EAAc;AACnC,YAAID,GAAJ,EAAS,OAAOH,EAAP;AACT,eAAOA,GAAG,IAAH,EAASI,IAAIC,QAAJ,CAAa,KAAb,IAAsB,mBAAQN,KAAKO,YAAb,CAA/B,CAAP;AACD,OAHD;AAID;AAPyB,GAAnB;AADI,C","file":"multer.js","sourcesContent":["import multer from 'multer';\nimport crypto from 'crypto';\nimport { extname, resolve } from 'path';\n\nexport default {\n  storage: multer.diskStorage({\n    destination: resolve(__dirname, '..', '..', 'tmp', 'uploads'),\n    filename: (req, file, cb) => {\n      crypto.randomBytes(16, (err, res) => {\n        if (err) return cb;\n        return cb(null, res.toString('hex') + extname(file.originalname));\n      });\n    },\n  }),\n};\n"]}