{"version":3,"sources":["../../../src/app/controllers/AvailableController.js"],"names":["AvailableController","req","res","date","query","status","json","error","searchDate","Number","Appointment","findAll","where","provider_id","params","providerId","canceled_at","Op","between","appointments","schedule","available","map","time","split","hour","minute","value","Date","find","a"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;;;AACA;;;;IAEMA,mB;;;;;;;;2GACQC,G,EAAKC,G;;;;;;AACPC,oB,GAASF,IAAIG,K,CAAbD,I;;oBAEHA,I;;;;;iDACID,IAAIG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,mBAAT,EAArB,C;;;AAGHC,0B,GAAaC,OAAON,IAAP,C;;uBAEQO,sBAAYC,OAAZ,CAAoB;AAC7CC,yBAAO;AACLC,iCAAaZ,IAAIa,MAAJ,CAAWC,UADnB;AAELC,iCAAa,IAFR;AAGLb,4DACGc,cAAGC,OADN,EACgB,CAAC,yBAAWV,UAAX,CAAD,EAAyB,uBAASA,UAAT,CAAzB,CADhB;AAHK;AADsC,iBAApB,C;;;AAArBW,4B;AAUAC,wB,GAAW,CACf,OADe,EAEf,OAFe,EAGf,OAHe,EAIf,OAJe,EAKf,OALe,EAMf,OANe,EAOf,OAPe,EAQf,OARe,EASf,OATe,C;AAYXC,yB,GAAYD,SAASE,GAAT,CAAa,gBAAQ;AAAA,oCACdC,KAAKC,KAAL,CAAW,GAAX,CADc;AAAA;AAAA,sBAC9BC,IAD8B;AAAA,sBACxBC,MADwB;;AAErC,sBAAMC,QAAQ,yBAAW,yBAAW,uBAASnB,UAAT,EAAqBiB,IAArB,CAAX,EAAuCC,MAAvC,CAAX,EAA2D,CAA3D,CAAd;;AAEA,yBAAO;AACLH,8BADK;AAELI,2BAAO,qBAAOA,KAAP,EAAc,0BAAd,CAFF;AAGLN,+BACE,sBAAQM,KAAR,EAAe,IAAIC,IAAJ,EAAf,KACA,CAACT,aAAaU,IAAb,CAAkB;AAAA,6BACjB,qBAAOC,EAAE3B,IAAT,EAAe,OAAf,KAA2BoB,IADV;AAAA,qBAAlB;AALE,mBAAP;AASD,iBAbiB,C;iDAeXrB,IAAII,IAAJ,CAASe,SAAT,C;;;;;;;;;;;;;;;;;;;;kBAII,IAAIrB,mBAAJ,E","file":"AvailableController.js","sourcesContent":["import { startOfDay, endOfDay, setHours, setMinutes, setSeconds, format, isAfter } from 'date-fns';\nimport Appointment from '../models/Appointment';\nimport { Op } from 'sequelize';\n\nclass AvailableController {\n  async index(req, res) {\n    const { date } = req.query;\n\n    if (!date) {\n      return res.status(400).json({ error: 'Date not defined!' });\n    }\n\n    const searchDate = Number(date);\n\n    const appointments = await Appointment.findAll({\n      where: {\n        provider_id: req.params.providerId,\n        canceled_at: null,\n        date: {\n          [Op.between]: [startOfDay(searchDate), endOfDay(searchDate)],\n        },\n      },\n    });\n\n    const schedule = [\n      '08:00',\n      '09:00',\n      '10:00',\n      '11:00',\n      '12:00',\n      '15:00',\n      '16:00',\n      '17:00',\n      '18:00',\n    ];\n\n    const available = schedule.map(time => {\n      const [hour, minute] = time.split(':');\n      const value = setSeconds(setMinutes(setHours(searchDate, hour), minute), 0);\n\n      return {\n        time,\n        value: format(value, \"yyyy-MM-dd'T'HH:mm:ssxxx\"),\n        available:\n          isAfter(value, new Date()) &&\n          !appointments.find(a =>\n            format(a.date, 'HH:mm') == time\n          )\n      }\n    });\n\n    return res.json(available);\n  }\n}\n\nexport default new AvailableController();\n"]}