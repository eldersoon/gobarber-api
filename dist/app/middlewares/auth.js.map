{"version":3,"sources":["../../../src/app/middlewares/auth.js"],"names":["req","res","next","authHeader","headers","authorization","status","json","error","split","token","jwt","verify","authConfig","secret","decoded","userId","id"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;;;;sFAEe,iBAAOA,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEPC,sBAFO,GAEMH,IAAII,OAAJ,CAAYC,aAFlB;;AAAA,gBAIRF,UAJQ;AAAA;AAAA;AAAA;;AAAA,6CAKJF,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,qBAAT,EAArB,CALI;;AAAA;AAAA,gCAQKL,WAAWM,KAAX,CAAiB,GAAjB,CARL,2EAQJC,KARI;AAAA;AAAA;AAAA,mBAWW,qBAAUC,uBAAIC,MAAd,EAAsBF,KAAtB,EAA6BG,eAAWC,MAAxC,CAXX;;AAAA;AAWLC,mBAXK;;;AAaXf,gBAAIgB,MAAJ,GAAaD,QAAQE,EAArB;;AAbW,6CAeJf,MAfI;;AAAA;AAAA;AAAA;AAAA,6CAiBJD,IAAIK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,gBAAT,EAArB,CAjBI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"auth.js","sourcesContent":["import jwt from 'jsonwebtoken';\nimport { promisify } from 'util';\n\nimport authConfig from '../../config/auth';\n\nexport default async (req, res, next) => {\n\n  const authHeader = req.headers.authorization;\n\n  if (!authHeader) {\n    return res.status(401).json({ error: 'Token not provided!' });\n  }\n\n  const [, token] = authHeader.split(' ');\n\n  try {\n    const decoded = await promisify(jwt.verify)(token, authConfig.secret);\n\n    req.userId = decoded.id;\n\n    return next();\n  } catch (err) {\n    return res.status(401).json({ error: 'Invalid token!' })\n  }\n};\n"]}